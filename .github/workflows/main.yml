name: CI

on: push

jobs:
  Test:
    if: startsWith(github.ref, 'refs/tags/v') != true
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Test app
        run: |
          yarn install
          yarn test

  Build:
    if: startsWith(github.ref, 'refs/tags/v') != true
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Build app
        run: |
          yarn install
          yarn build

      - name: Prepare uploads
        run: find ./dist -mindepth 1 -maxdepth 1 -not \( -name "Gifizer-*-mac.dmg" -or -name "Gifizer-*-win.exe" -or -name "Gifizer-*-win.zip" \) | xargs rm -rf
        shell: bash

      - name: Upload built files
        uses: actions/upload-artifact@v1
        with:
          name: dist-${{ matrix.os }}
          path: dist

  Release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ${{ matrix.os }}
    needs: [Test, Build]

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Download built files
        uses: actions/download-artifact@v1
        with:
          name: dist-${{ matrix.os }}
          path: dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            dist/Gifizer-*-mac.dmg
            dist/Gifizer-*-win.exe
            dist/Gifizer-*-win.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
