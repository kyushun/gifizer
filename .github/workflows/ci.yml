name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  Test:
    runs-on: macos-11
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Lint
        run: yarn lint

      - name: Test app
        run: yarn test

  Build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-11, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: extract_branch

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --prefer-offline

      - name: Build app
        run: yarn package

      - name: Prepare uploads
        run: find ./dist -mindepth 1 -maxdepth 1 -not \( -name "Gifizer-*-mac-*.dmg" -or -name "Gifizer-*-win.exe" \) | xargs rm -rf
        shell: bash

      - name: Upload built files
        uses: actions/upload-artifact@v2.3.1
        with:
          name: dist-${{ matrix.os }}
          path: dist
